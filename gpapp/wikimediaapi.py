#coding:utf-8
#!/usr/bin/env python
"""
    Wikimedia API module
"""
from copy import deepcopy
from .dataapi import ApiDataWikiMedia, ApiDataConfig


class WikiMediaAddressProcessing(ApiDataWikiMedia, ApiDataConfig):
    """
        creation of the address list of wikipedia pages
            - map_latitude
            - map_longitude
            generated by googlemap API
        determination of the content of the common wikimedia address
            at the address found by googlemap API
        display of the history for the googlemap address found
    """
    def __init__(self, latitude, longitude):
        ApiDataWikiMedia.__init__(self)
        ApiDataConfig.__init__(self)
        self.latitude = latitude
        self.longitude = longitude

    def get_from_pages_api(self):
        """
            creation of wiki pages
        """
        url_api = self.get_from_url_api()
        params =\
            self.get_from_localization_data_api(self.latitude, self.longitude)
        result_pages = self.get_from_url_json(url_api['url_api_wiki'], params)
        return result_pages

    def get_from_address_list_creation(self):
        """
            common address list set found by wikimedia API
                - pages_wiki ==> wikimedia page address list set
                - common_address ==> set of wikimedia page address lists
        """
        address_url = self.get_from_pages_api()
        common_address = [
            address_url['query']['geosearch'][page]['title'].split(' ')\
            for page in range(len(address_url['query']['geosearch']))
        ]
        return common_address

class ApiResultComparison:
    """
        Comparison of the result of the googleMaps API
        with the result of the wikimedia API
    """
    def __init__(self, address_google, list_address_pages_wiki):
        self.map_address = address_google
        self.list_pages_wiki = list_address_pages_wiki

    def get_from_list_address_convertion(self):
        """
            converting the content
            of the address found by googleMap
            into a list of words
        """
        self.map_address = self.map_address.lower().replace(',', '')
        self.map_address = self.map_address.split(' ')

    def get_from_common_string_creation(self):
        """
            comparison of the result of the wikimedia API
            with the address of the googlemap API found
                - common_address ==> common address list
                - common_word    ==> common word list
                - word           ==> common address
        """
        self.get_from_list_address_convertion()
        # common_address_list = [... ['Quai', 'de', 'la', 'Gironde']...]
        common_address_list = self.list_pages_wiki
        # googlemap_address = ['10','quai', 'de', 'la', 'charente'...]
        googlemap_address = self.map_address
        common_addresses = [] # [...['quai', 'de', 'la', 'charente']...]
        common_words = [] # [...'quai', 'charente'...]
        compared_content = '' # 'quai de la charente'
        for address_as_a_list in common_address_list:
            for a_word in address_as_a_list:
                if a_word.lower() in googlemap_address:
                    common_words.append(a_word)
            common_addresses.append(deepcopy(common_words))
            common_words = []
        for an_address_as_a_list in common_addresses:
            if len(compared_content)< len(an_address_as_a_list):
                compared_content = an_address_as_a_list
        compared_content = ' '.join(compared_content)
        return compared_content


if __name__ == '__main__':
    pass
